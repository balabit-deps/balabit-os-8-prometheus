Description: Disable Azure until the Debian packages are updated.

--- a/config/config_test.go
+++ b/config/config_test.go
@@ -27,7 +27,6 @@
 	"github.com/prometheus/common/model"
 	"gopkg.in/yaml.v2"
 
-	"github.com/prometheus/prometheus/discovery/azure"
 	sd_config "github.com/prometheus/prometheus/discovery/config"
 	"github.com/prometheus/prometheus/discovery/consul"
 	"github.com/prometheus/prometheus/discovery/dns"
@@ -469,31 +468,6 @@
 			},
 		},
 		{
-			JobName: "service-azure",
-
-			HonorTimestamps: true,
-			ScrapeInterval:  model.Duration(15 * time.Second),
-			ScrapeTimeout:   DefaultGlobalConfig.ScrapeTimeout,
-
-			MetricsPath: DefaultScrapeConfig.MetricsPath,
-			Scheme:      DefaultScrapeConfig.Scheme,
-
-			ServiceDiscoveryConfig: sd_config.ServiceDiscoveryConfig{
-				AzureSDConfigs: []*azure.SDConfig{
-					{
-						Environment:          "AzurePublicCloud",
-						SubscriptionID:       "11AAAA11-A11A-111A-A111-1111A1111A11",
-						TenantID:             "BBBB222B-B2B2-2B22-B222-2BB2222BB2B2",
-						ClientID:             "333333CC-3C33-3333-CCC3-33C3CCCCC33C",
-						ClientSecret:         "mysecret",
-						AuthenticationMethod: "OAuth",
-						RefreshInterval:      model.Duration(5 * time.Minute),
-						Port:                 9100,
-					},
-				},
-			},
-		},
-		{
 			JobName: "service-nerve",
 
 			HonorTimestamps: true,
@@ -689,7 +663,7 @@
 	yamlConfig := string(config)
 
 	matches := secretRe.FindAllStringIndex(yamlConfig, -1)
-	testutil.Assert(t, len(matches) == 7, "wrong number of secret matches found")
+	testutil.Assert(t, len(matches) == 6, "wrong number of secret matches found")
 	testutil.Assert(t, !strings.Contains(yamlConfig, "mysecret"),
 		"yaml marshal reveals authentication credentials.")
 }
@@ -845,26 +819,6 @@
 		errMsg:   "field scrape_configs already set in type config.plain",
 	},
 	{
-		filename: "azure_client_id_missing.bad.yml",
-		errMsg:   "azure SD configuration requires a client_id",
-	},
-	{
-		filename: "azure_client_secret_missing.bad.yml",
-		errMsg:   "azure SD configuration requires a client_secret",
-	},
-	{
-		filename: "azure_subscription_id_missing.bad.yml",
-		errMsg:   "azure SD configuration requires a subscription_id",
-	},
-	{
-		filename: "azure_tenant_id_missing.bad.yml",
-		errMsg:   "azure SD configuration requires a tenant_id",
-	},
-	{
-		filename: "azure_authentication_method.bad.yml",
-		errMsg:   "unknown authentication_type \"invalid\". Supported types are \"OAuth\" or \"ManagedIdentity\"",
-	},
-	{
 		filename: "empty_scrape_config.bad.yml",
 		errMsg:   "empty or null scrape config section",
 	},
--- a/discovery/azure/azure.go
+++ b/discovery/azure/azure.go
@@ -11,6 +11,8 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
+// +build ignore
+
 package azure
 
 import (
--- a/discovery/azure/azure_test.go
+++ b/discovery/azure/azure_test.go
@@ -11,6 +11,8 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
+// +build ignore
+
 package azure
 
 import (
--- a/discovery/config/config.go
+++ b/discovery/config/config.go
@@ -16,7 +16,6 @@
 import (
 	"github.com/pkg/errors"
 
-	"github.com/prometheus/prometheus/discovery/azure"
 	"github.com/prometheus/prometheus/discovery/consul"
 	"github.com/prometheus/prometheus/discovery/dns"
 	"github.com/prometheus/prometheus/discovery/ec2"
@@ -54,19 +53,12 @@
 	EC2SDConfigs []*ec2.SDConfig `yaml:"ec2_sd_configs,omitempty"`
 	// List of OpenStack service discovery configurations.
 	OpenstackSDConfigs []*openstack.SDConfig `yaml:"openstack_sd_configs,omitempty"`
-	// List of Azure service discovery configurations.
-	AzureSDConfigs []*azure.SDConfig `yaml:"azure_sd_configs,omitempty"`
 	// List of Triton service discovery configurations.
 	TritonSDConfigs []*triton.SDConfig `yaml:"triton_sd_configs,omitempty"`
 }
 
 // Validate validates the ServiceDiscoveryConfig.
 func (c *ServiceDiscoveryConfig) Validate() error {
-	for _, cfg := range c.AzureSDConfigs {
-		if cfg == nil {
-			return errors.New("empty or null section in azure_sd_configs")
-		}
-	}
 	for _, cfg := range c.ConsulSDConfigs {
 		if cfg == nil {
 			return errors.New("empty or null section in consul_sd_configs")
--- a/discovery/manager.go
+++ b/discovery/manager.go
@@ -27,7 +27,6 @@
 	sd_config "github.com/prometheus/prometheus/discovery/config"
 	"github.com/prometheus/prometheus/discovery/targetgroup"
 
-	"github.com/prometheus/prometheus/discovery/azure"
 	"github.com/prometheus/prometheus/discovery/consul"
 	"github.com/prometheus/prometheus/discovery/dns"
 	"github.com/prometheus/prometheus/discovery/ec2"
@@ -404,11 +403,6 @@
 			return gce.NewDiscovery(*c, log.With(m.logger, "discovery", "gce"))
 		})
 	}
-	for _, c := range cfg.AzureSDConfigs {
-		add(c, func() (Discoverer, error) {
-			return azure.NewDiscovery(c, log.With(m.logger, "discovery", "azure")), nil
-		})
-	}
 	for _, c := range cfg.TritonSDConfigs {
 		add(c, func() (Discoverer, error) {
 			return triton.New(log.With(m.logger, "discovery", "triton"), c)
--- a/config/testdata/conf.good.yml
+++ b/config/testdata/conf.good.yml
@@ -211,16 +211,6 @@
             - web
             - db
 
-- job_name: service-azure
-  azure_sd_configs:
-    - environment: AzurePublicCloud
-      authentication_method: OAuth
-      subscription_id: 11AAAA11-A11A-111A-A111-1111A1111A11
-      tenant_id: BBBB222B-B2B2-2B22-B222-2BB2222BB2B2
-      client_id: 333333CC-3C33-3333-CCC3-33C3CCCCC33C
-      client_secret: mysecret
-      port: 9100
-
 - job_name: service-nerve
   nerve_sd_configs:
     - servers:
